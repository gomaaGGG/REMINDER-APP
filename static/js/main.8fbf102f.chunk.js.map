{"version":3,"sources":["components/App.js","actions/index.js","types.js","reducers/index.js","index.js","components/logo.png"],"names":["App","state","text","date","Date","render_reminders","reminders","props","className","map","reminder","key","id","moment","fromNow","onClick","remove_reminder","console","log","this","src","logo","alt","type","placeholder","value","onChange","e","setState","target","selected","showTimeSelect","timeFormat","timeCaption","dateFormat","add_reminder","clear_reminders","Component","connect","action","read_cookie","Math","random","bake_cookie","filter","store","createStore","ReactDom","render","document","getElementById","module","exports"],"mappings":"2RAWMA,E,2MACJC,MAAQ,CACNC,KAAM,GACNC,KAAM,IAAIC,M,EAGZC,iBAAmB,WACjB,IAAMC,EAAY,EAAKC,MAAMD,UAC7B,OACE,wBAAIE,UAAU,cACXF,EAAUG,KAAI,SAAAC,GACb,OACE,wBAAIC,IAAKD,EAASE,GAAIJ,UAAU,mBAC9B,6BAAME,EAASR,MACf,6BAAMW,IAAO,IAAIT,KAAKM,EAASP,OAAOW,WACtC,yBAAKN,UAAU,2BAA2BO,QAAS,kBAAM,EAAKR,MAAMS,gBAAgBN,EAASE,MAA7F,W,wEAOF,IAAD,OAEP,OADAK,QAAQC,IAAIC,KAAKZ,OAEf,yBAAKC,UAAU,OACb,yBAAKY,IAAKC,IAAMC,IAAI,iBACpB,yBAAKd,UAAU,kBACb,2DAEF,2BACEA,UAAU,eACVe,KAAK,OACLC,YAAY,oBACZC,MAAON,KAAKlB,MAAMC,KAClBwB,SAAU,SAAAC,GAAC,OAAI,EAAKC,SAAS,CAAE1B,KAAMyB,EAAEE,OAAOJ,WAGhD,kBAAC,IAAD,CACEjB,UAAU,eACViB,MAAON,KAAKlB,MAAME,KAClB2B,SAAUX,KAAKlB,MAAME,KACrBuB,SAAU,SAAAvB,GAAI,OAAI,EAAKyB,SAAS,CAAEzB,KAAMA,KACxC4B,gBAAc,EACdC,WAAW,QACXC,YAAY,OACZC,WAAW,yBAGb,4BACE1B,UAAU,6BACVO,QAAS,WACP,EAAKR,MAAM4B,aAAa,EAAKlC,MAAMC,KAAM,EAAKD,MAAME,MACpD,EAAKyB,SAAS,CACZ1B,KAAM,GACNC,KAAM,OANZ,gBAYCgB,KAAKd,mBACN,4BACEG,UAAU,4BACVO,QAAS,WACP,EAAKR,MAAM6B,oBAGZ,IANH,iBAOiB,U,GArEPC,aA4FHC,eACb,SAAArC,GACE,MAAO,CACLK,UAAWL,KAGf,CAAEkC,aCzGsB,SAACjC,EAAKC,GAChC,IAAMoC,EAAQ,CACdhB,KCN0B,eDO1BrB,OACAC,QAKA,OADAc,QAAQC,IAAI,MAAMqB,GACXA,GDgGWvB,gBC3FW,SAACJ,GAC1B,IAAM2B,EAAQ,CACdhB,KClByB,kBDmBzBX,GAAGA,GAGH,OADAK,QAAQC,IAAI,SAASqB,GACdA,GDqFwBH,gBChFF,WACzB,IAAMG,EAAQ,CACdhB,KC3BqB,mBD+BrB,OADAN,QAAQC,IAAI,QAAQqB,GACbA,IDoEAD,CAObtC,G,wCGxEaM,EAjCG,WAAyB,IAAxBL,EAAuB,uDAAf,GAAIsC,EAAW,uCACpCjC,EAAY,GAEhB,OADAL,EAAMuC,sBAAYlC,GDPM,iBCQpBiC,EAAOhB,MACTjB,EAAS,sBACJL,GADI,CAEP,CAAEC,KAAMqC,EAAOrC,KAAMC,KAAMoC,EAAOpC,KAAMS,GAAI6B,KAAKC,YAEnDC,sBAAY,YAAYrC,GACxBW,QAAQC,IAAIZ,GACLA,GDbkB,oBCgBlBiC,EAAOhB,MAGlBjB,EAAUL,EAAM2C,QAAO,SAAAlC,GAAQ,OAAEA,EAASE,KAAK2B,EAAO3B,MACtD+B,sBAAY,YAAYrC,GACjBA,GDnBsB,oBCsBlBiC,EAAOhB,MAGdjB,EAAU,GACVqC,sBAAY,YAAYrC,GACjBA,GAIIL,GCzBT4C,EAAQC,YAAYxC,GAE1ByC,IAASC,OACP,kBAAC,IAAD,CAAUH,MAAOA,GACd,IACD,kBAAC,EAAD,MAAQ,KAEVI,SAASC,eAAe,U,mBCjB1BC,EAAOC,QAAU,IAA0B,kC","file":"static/js/main.8fbf102f.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  add_reminder,\r\n  remove_reminder,\r\n  clear_reminders\r\n} from \"../actions/index\";\r\nimport moment from \"moment\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport logo from \"./logo.png\";\r\nimport { connect } from \"react-redux\";\r\nclass App extends Component {\r\n  state = {\r\n    text: \"\",\r\n    date: new Date()\r\n  };\r\n\r\n  render_reminders = () => {\r\n    const reminders = this.props.reminders;\r\n    return (\r\n      <ul className=\"list-group\">\r\n        {reminders.map(reminder => {\r\n          return (\r\n            <li key={reminder.id} className=\"list-group-item\">\r\n              <div>{reminder.text}</div>\r\n              <div>{moment(new Date(reminder.date)).fromNow()}</div>\r\n              <div className=\"closeIcon btn btn-danger\" onClick={() => this.props.remove_reminder(reminder.id)}>X</div>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    );\r\n  };\r\n  render() {\r\n    console.log(this.props);\r\n    return (\r\n      <div className=\"App\">\r\n        <img src={logo} alt=\"Dont forgot \" />\r\n        <div className=\"reminder-title\">\r\n          <h2> what would you do ya man </h2>\r\n        </div>\r\n        <input\r\n          className=\"form-control\"\r\n          type=\"text\"\r\n          placeholder=\"enter your tasks \"\r\n          value={this.state.text}\r\n          onChange={e => this.setState({ text: e.target.value })}\r\n        />\r\n\r\n        <DatePicker\r\n          className=\"form-control\"\r\n          value={this.state.date}\r\n          selected={this.state.date}\r\n          onChange={date => this.setState({ date: date })}\r\n          showTimeSelect\r\n          timeFormat=\"HH:mm\"\r\n          timeCaption=\"time\"\r\n          dateFormat=\"MMMM d, yyyy h:mm aa\"\r\n        />\r\n\r\n        <button\r\n          className=\"btn btn-primary  btn-block\"\r\n          onClick={() => {\r\n            this.props.add_reminder(this.state.text, this.state.date);\r\n            this.setState({\r\n              text: \"\",\r\n              date: \"\"\r\n            });\r\n          }}\r\n        >\r\n          ADD reminder\r\n        </button>\r\n        {this.render_reminders()}\r\n        <button\r\n          className=\"btn btn-danger  btn-block\"\r\n          onClick={() => {\r\n            this.props.clear_reminders();\r\n          }}\r\n        >\r\n          {\" \"}\r\n          clear reminder{\" \"}\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/*function mapdispatchtoprops(dispatch){\r\nreturn {\r\nadd_reminder:()=>dispatch(add_reminder())\r\n\r\n}\r\n\r\n} == */\r\n\r\n/*function mapstatetoprops(state){\r\nreturn {\r\nreminders:state\r\n\r\n}\r\n\r\n}*/\r\n\r\nexport default connect(\r\n  state => {\r\n    return {\r\n      reminders: state\r\n    };\r\n  },\r\n  { add_reminder, remove_reminder, clear_reminders }\r\n)(App);\r\n","import {ADD_REMINDER} from '../types'\r\nimport {REMOVE_REMINDER} from '../types'\r\nimport {CLEAR_REMINDERS} from '../types'\r\n\r\nexport const add_reminder=(text,date)=>{\r\nconst action ={\r\ntype:ADD_REMINDER,\r\ntext,\r\ndate\r\n\r\n\r\n}\r\nconsole.log(\"add\",action)\r\nreturn action\r\n\r\n}\r\n\r\n\r\nexport const remove_reminder=(id)=>{\r\n    const action ={\r\n    type:REMOVE_REMINDER,\r\n    id:id\r\n    }\r\n    console.log(\"remove\",action)\r\n    return action\r\n    \r\n    }\r\n\r\n\r\n    export const clear_reminders=()=>{\r\n        const action ={\r\n        type:CLEAR_REMINDERS,\r\n      \r\n        }\r\n        console.log(\"clear\",action)\r\n        return action\r\n        \r\n        }","export const ADD_REMINDER='ADD_REMINDER'\r\n\r\nexport const REMOVE_REMINDER='REMOVE_REMINDER'\r\n\r\nexport const CLEAR_REMINDERS='CLEAR_REMINDERS'","import { ADD_REMINDER } from \"../types\";\r\nimport { REMOVE_REMINDER } from \"../types\";\r\nimport {CLEAR_REMINDERS} from '../types'\r\nimport { bake_cookie, read_cookie } from 'sfcookies'\r\n\r\nconst reminders = (state = [], action) => {\r\n  let reminders = [];\r\n  state=read_cookie(reminders);\r\n  if (action.type === ADD_REMINDER) {\r\n    reminders = [\r\n      ...state,\r\n      { text: action.text, date: action.date, id: Math.random() }\r\n    ];\r\n    bake_cookie(\"reminders\",reminders)\r\n    console.log(reminders);\r\n    return reminders;\r\n  }\r\n\r\n  else if (action.type === REMOVE_REMINDER)\r\n  {\r\n\r\nreminders=state.filter(reminder=>reminder.id!==action.id)\r\nbake_cookie(\"reminders\",reminders)\r\nreturn reminders\r\n\r\n  }\r\n  else if (action.type===CLEAR_REMINDERS)\r\n  {\r\n\r\n    reminders=[]\r\n    bake_cookie(\"reminders\",reminders)\r\n    return reminders\r\n    \r\n\r\n  }\r\n  else  return state;\r\n};\r\n\r\nexport default reminders;\r\n","import React from \"react\";\r\nimport ReactDom from \"react-dom\";\r\nimport App from \"./components/App\";\r\nimport { Provider } from \"react-redux\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./index.css\";\r\n\r\nimport { createStore } from \"redux\";\r\n\r\nimport reminders from \"./reducers/index\";\r\nconst store = createStore(reminders);\r\n\r\nReactDom.render(\r\n  <Provider store={store}>\r\n    {\" \"}\r\n    <App />{\" \"}\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.9bd2dd25.png\";"],"sourceRoot":""}